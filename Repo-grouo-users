fetch_repo_groups() {
    local project_key=$1
    local repo_slug=$2
    local start=0
    local has_more=true

    # File to save groups information
    local groups_file="groups.csv"
    echo "Group Name,Group Description,Permission" > "$groups_file"

    while $has_more; do
        response=$(curl -s -u "$USERNAME:$PASSWORD" "$BASE_URL/projects/$project_key/repos/$repo_slug/permissions/groups?limit=$limit&start=$start")
        echo "$response" | jq -r '.values[] | "\(.group.name),\(.group.description),\(.permission)"' >> "$groups_file"
        
        # Fetch users for each group and save to a file
        echo "$response" | jq -r '.values[].group.name' | while read group_name; do
            fetch_users_from_group "$project_key" "$repo_slug" "$group_name"
        done

        is_last_page=$(echo "$response" | jq '.isLastPage')
        has_more=$( [ "$is_last_page" == "false" ] && echo false || echo true )
        start=$((start + limit))
    done
}

fetch_users_from_group() {
    local project_key=$1
    local repo_slug=$2
    local group_name=$3
    local start=0
    local has_more=true

    # File to save group users information
    local users_file="group_users.csv"
    echo "Group Name,User Name,User Display Name,User Email" > "$users_file"

    while $has_more; do
        response=$(curl -s -u "$USERNAME:$PASSWORD" "$BASE_URL/projects/$project_key/repos/$repo_slug/groups/$group_name/users?limit=$limit&start=$start")
        echo "$response" | jq -r --arg group_name "$group_name" '.values[] | "\($group_name),\(.user.name),\(.user.displayName),\(.user.email)"' >> "$users_file"
        
        is_last_page=$(echo "$response" | jq '.isLastPage')
        has_more=$( [ "$is_last_page" == "false" ] && echo false || echo true )
        start=$((start + limit))
    done
}

# Example usage
fetch_repo_groups "PROJECT_KEY" "REPO_SLUG"
