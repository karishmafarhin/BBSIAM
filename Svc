// Define the service account token pattern to search for
def serviceAccountPattern = 'svc-app-new'

// Iterate through all jobs in Jenkins
Jenkins.instance.getAllItems(Job).each { job ->
    // Check if the job is a pipeline (WorkflowJob)
    if (job instanceof org.jenkinsci.plugins.workflow.job.WorkflowJob) {
        def configXml = job.getConfigFile().asString()
        // Search for the service account pattern in the pipeline's configuration
        if (configXml.contains(serviceAccountPattern)) {
            println "Pipeline using the service account: ${job.fullName}"
        }
    }
}


// Define the service account token pattern to search for
def serviceAccountPattern = 'svc-app-new'

Jenkins.instance.getAllItems(org.jenkinsci.plugins.workflow.job.WorkflowJob).each { job ->
    try {
        // Fetch the pipeline's configuration XML
        def configXml = job.getConfigFile().asString()
        // Check if the configuration XML contains the service account name
        if (configXml.contains(serviceAccountPattern)) {
            println "Pipeline using the service account: ${job.fullName}"
        }
    } catch (Exception e) {
        println "Error checking pipeline: ${job.fullName} - ${e.message}"
    }
}
// Define the service account token pattern to search for
def serviceAccountPattern = 'svc-app-new'

// Loop through all Jenkins jobs
Jenkins.instance.getAllItems(org.jenkinsci.plugins.workflow.job.WorkflowJob).each { job ->
    try {
        // Get the pipeline configuration XML as a string
        def configXml = job.getConfigFile().asString()
        
        // Search for the service account pattern in relevant credential bindings
        def credentialPattern = ~/((credentialsId|usernamePassword|secret)(.|\s)*$serviceAccountPattern)/
        
        if (credentialPattern.matcher(configXml).find()) {
            // Print only the full name of the job (e.g., folder/pipelineName)
            println job.fullName
        }
    } catch (Exception e) {
        // Catch and print any errors encountered
        println "Error processing job: ${job.fullName} - ${e.message}"
    }
}
